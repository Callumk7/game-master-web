import type { QueryClient } from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { createRootRouteWithContext, HeadContent, Scripts } from "@tanstack/react-router";
import { TanStackRouterDevtools } from "@tanstack/react-router-devtools";
import { createServerFn } from "@tanstack/react-start";
import { toast, Toaster } from "sonner";
import { ThemeProvider } from "~/components/theme-provider";
import { getAppSession } from "~/utils/session";
import appCss from "../styles.css?url";
import { Button } from "~/components/ui/button";

export const SERVER_URL = "https://gamemastercore-production.up.railway.app";

interface MyRouterContext {
	queryClient: QueryClient;
}

// NOTE: This function accesses the session from the cookie session. It runs on the server.
const fetchSession = createServerFn({ method: "GET" }).handler(async () => {
	const session = await getAppSession();

	if (!session.data.token) {
		return null;
	}

	return {
		user: session.data.user,
		token: session.data.token,
	};
});

export const Route = createRootRouteWithContext<MyRouterContext>()({
	beforeLoad: async () => {
		const session = await fetchSession();

		return {
			...session,
		};
	},
	head: () => ({
		meta: [
			{
				charSet: "utf-8",
			},
			{
				name: "viewport",
				content: "width=device-width, initial-scale=1",
			},
			{
				title: "Game Master - The DM Notebook",
			},
		],
		links: [
			{
				rel: "stylesheet",
				href: appCss,
			},
		],
	}),

	shellComponent: RootDocument,
});

function RootDocument({ children }: { children: React.ReactNode }) {
	return (
		<html lang="en" suppressHydrationWarning>
			<head>
				<HeadContent />
			</head>
			<body>
				<ThemeProvider attribute="class" defaultTheme="dark" enableSystem>
					{children}
					<ToastDemo />
					<TanStackRouterDevtools position="top-right" />
					<ReactQueryDevtools buttonPosition="top-left" />
					<Scripts />
					<Toaster position="top-center" theme={"dark"} />
				</ThemeProvider>
			</body>
		</html>
	);
}

function ToastDemo() {
	return (
		<div className="flex flex-col items-center justify-center gap-4 p-4">
			<Button onClick={() => toast.success("This is a success message")}>
				Success
			</Button>
			<Button onClick={() => toast.error("This is an error message")}>Error</Button>
			<Button onClick={() => toast.warning("This is a warning message")}>
				Warning
			</Button>
			<Button onClick={() => toast.info("This is an info message")}>Info</Button>
			<Button onClick={() => toast.loading("This is a loading message")}>
				Loading
			</Button>
			<Button onClick={() => toast("This is a loading message")}>Default</Button>
		</div>
	);
}
