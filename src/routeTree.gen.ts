/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as AuthExperimentsRouteImport } from './routes/_auth/experiments'
import { Route as AuthGamesRouteRouteImport } from './routes/_auth/games/route'
import { Route as AuthGamesIndexRouteImport } from './routes/_auth/games/index'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as AuthGamesShowRouteImport } from './routes/_auth/games/show'
import { Route as AuthGamesNewRouteImport } from './routes/_auth/games/new'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api.demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthExperimentsRoute = AuthExperimentsRouteImport.update({
  id: '/experiments',
  path: '/experiments',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGamesRouteRoute = AuthGamesRouteRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => AuthRoute,
} as any)
const AuthGamesIndexRoute = AuthGamesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthGamesRouteRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthGamesShowRoute = AuthGamesShowRouteImport.update({
  id: '/show',
  path: '/show',
  getParentRoute: () => AuthGamesRouteRoute,
} as any)
const AuthGamesNewRoute = AuthGamesNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AuthGamesRouteRoute,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/signup': typeof SignupRoute
  '/games': typeof AuthGamesRouteRouteWithChildren
  '/experiments': typeof AuthExperimentsRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/games/new': typeof AuthGamesNewRoute
  '/games/show': typeof AuthGamesShowRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/games/': typeof AuthGamesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/signup': typeof SignupRoute
  '/experiments': typeof AuthExperimentsRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/games/new': typeof AuthGamesNewRoute
  '/games/show': typeof AuthGamesShowRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/games': typeof AuthGamesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/signup': typeof SignupRoute
  '/_auth/games': typeof AuthGamesRouteRouteWithChildren
  '/_auth/experiments': typeof AuthExperimentsRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_auth/games/new': typeof AuthGamesNewRoute
  '/_auth/games/show': typeof AuthGamesShowRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/_auth/games/': typeof AuthGamesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/logout'
    | '/signup'
    | '/games'
    | '/experiments'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/games/new'
    | '/games/show'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/games/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/logout'
    | '/signup'
    | '/experiments'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/games/new'
    | '/games/show'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/games'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/logout'
    | '/signup'
    | '/_auth/games'
    | '/_auth/experiments'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/_auth/games/new'
    | '/_auth/games/show'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/_auth/games/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  SignupRoute: typeof SignupRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/demo-names' | '/api/demo-tq-todos'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/demo-names' | '/api/demo-tq-todos'
  id: '__root__' | '/api/demo-names' | '/api/demo-tq-todos'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/experiments': {
      id: '/_auth/experiments'
      path: '/experiments'
      fullPath: '/experiments'
      preLoaderRoute: typeof AuthExperimentsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/games': {
      id: '/_auth/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof AuthGamesRouteRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/games/': {
      id: '/_auth/games/'
      path: '/'
      fullPath: '/games/'
      preLoaderRoute: typeof AuthGamesIndexRouteImport
      parentRoute: typeof AuthGamesRouteRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/games/show': {
      id: '/_auth/games/show'
      path: '/show'
      fullPath: '/games/show'
      preLoaderRoute: typeof AuthGamesShowRouteImport
      parentRoute: typeof AuthGamesRouteRoute
    }
    '/_auth/games/new': {
      id: '/_auth/games/new'
      path: '/new'
      fullPath: '/games/new'
      preLoaderRoute: typeof AuthGamesNewRouteImport
      parentRoute: typeof AuthGamesRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthGamesRouteRouteChildren {
  AuthGamesNewRoute: typeof AuthGamesNewRoute
  AuthGamesShowRoute: typeof AuthGamesShowRoute
  AuthGamesIndexRoute: typeof AuthGamesIndexRoute
}

const AuthGamesRouteRouteChildren: AuthGamesRouteRouteChildren = {
  AuthGamesNewRoute: AuthGamesNewRoute,
  AuthGamesShowRoute: AuthGamesShowRoute,
  AuthGamesIndexRoute: AuthGamesIndexRoute,
}

const AuthGamesRouteRouteWithChildren = AuthGamesRouteRoute._addFileChildren(
  AuthGamesRouteRouteChildren,
)

interface AuthRouteChildren {
  AuthGamesRouteRoute: typeof AuthGamesRouteRouteWithChildren
  AuthExperimentsRoute: typeof AuthExperimentsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthGamesRouteRoute: AuthGamesRouteRouteWithChildren,
  AuthExperimentsRoute: AuthExperimentsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  SignupRoute: SignupRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
